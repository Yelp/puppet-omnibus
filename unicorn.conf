# NOTE: This file is maintained in the puppet-omnibus package, NOT by puppet
workers = ENV['PUPPET_OMNIBUS_WORKERS'].to_i
workers = 12 if workers == 0
worker_processes 12

working_directory "/opt/puppet-omnibus/var/lib/puppetmaster/rack"
listen '/var/run/puppet/puppetmaster_unicorn.sock', :backlog => 512
timeout 600
pid "/var/run/puppet/puppetmaster_unicorn.pid"

log_prefix = ENV['PUPPET_OMNIBUS_LOG'] || "/var/log/puppetmaster"
stderr_path "#{log_prefix}/unicorn.err"
stdout_path "#{log_prefix}/unicorn.out"

preload_app true
if GC.respond_to?(:copy_on_write_friendly=)
  GC.copy_on_write_friendly = true
end

before_fork do |server, worker|
  old_pid = "#{server.config[:pid]}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did our job for us
    end
  end
end
